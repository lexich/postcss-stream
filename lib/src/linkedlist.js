"use strict";
exports.NONE = typeof Symbol === "function" ? Symbol.for("NONE") : {};
var removedItems = { data: null, prev: null, next: null };
function persist(item) {
    item.next = removedItems;
    item.prev = null;
    item.data = null;
    removedItems = item;
}
exports.persist = persist;
function isEmpty(list) {
    if (!list) {
        return true;
    }
    else {
        return list.prev === list.next && list.prev === list;
    }
}
exports.isEmpty = isEmpty;
function init() {
    var list = { data: exports.NONE, next: null, prev: null };
    list.next = list;
    list.prev = list;
    return list;
}
exports.init = init;
function add(data, list) {
    if (!list) {
        list = init();
    }
    if (data === exports.NONE) {
        return list;
    }
    var item;
    var last = list.prev;
    if (!removedItems.next) {
        item = {
            data: data,
            prev: last,
            next: list
        };
    }
    else {
        item = removedItems;
        removedItems = removedItems.next;
        item.data = data;
        item.prev = last;
        item.next = list;
    }
    last.next = item;
    list.prev = item;
    return list;
}
exports.add = add;
function shift(list) {
    if (list.prev === list.next && list.prev === list) {
        return null;
    }
    else {
        var first = list.next;
        var second = first.next;
        list.next = second;
        second.prev = list;
        var data = first.data;
        persist(first);
        return data === exports.NONE ? null : data;
    }
}
exports.shift = shift;
function pop(list) {
    if (list.prev === list.next && list.prev === list) {
        return null;
    }
    else {
        var first = list.prev;
        var second = first.prev;
        list.prev = second;
        second.next = list;
        var data = first.data;
        persist(first);
        return data === exports.NONE ? null : data;
    }
}
exports.pop = pop;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlua2VkbGlzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saW5rZWRsaXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBYSxRQUFBLElBQUksR0FBRyxPQUFPLE1BQU0sS0FBSyxVQUFVLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBSSxFQUFhLENBQUM7QUFRdkYsSUFBSSxZQUFZLEdBQXdCLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQztBQUUvRSxpQkFBd0IsSUFBeUI7SUFDN0MsSUFBSSxDQUFDLElBQUksR0FBRyxZQUFZLENBQUM7SUFDekIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDakIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDakIsWUFBWSxHQUFHLElBQUksQ0FBQztBQUN4QixDQUFDO0FBTEQsMEJBS0M7QUFFRCxpQkFBMkIsSUFBd0I7SUFDL0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ1IsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNoQixDQUFDO0lBQUMsSUFBSSxDQUFDLENBQUM7UUFDSixNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDO0lBQ3pELENBQUM7QUFDTCxDQUFDO0FBTkQsMEJBTUM7QUFFRDtJQUNJLElBQU0sSUFBSSxHQUFzQixFQUFFLElBQUksRUFBRSxZQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDdkUsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDakIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDakIsTUFBTSxDQUFDLElBQUksQ0FB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